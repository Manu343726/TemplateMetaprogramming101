
# This is the file for configuring your finds of dependencies. You can have
# several policies defined, each one with its own name. The 'default' policy
# will be use if you dont specify a policy name in your finds.
#
# Each policy is an ordered list of rules, which will be evaluated in order.
# Each rule has three fields:
#    block: an expression that can be evaluated using "block" and "branch"
#            objects.
#    version: an expression that can be evaluated using "tag" and "v" objects
#    priority: a integer number, with the resulting priority if the two
#            above conditions are true. Maximum priority is 0, negative
#            priorities means reject (do not admit) such as dependency
#
# The rules will be evaluated IN ORDER for each possible block that could
# resolve your dependencies. If the "block" and "version" conditions of a
# rule are met, then the priority is returned and NO more rules are
# evaluated. If the conditions are not met, then it continues. THUS THE
# ORDER OF RULES IS VERY IMPORTANT
# The priority indicates the order of find, but it is not a guarantee that
# that will be the solution. For same priority versions, then the newest
# ones are checked first

default:
# First rule is accept with priority 1 all your published blocks (master branches)
# for all tags.
- block: block.user == "manu343726" and branch == "manu343726/master"
  version: tag>=DEV
  priority: 1
# Then, accept with priority 1 all 'master' branches of the original
# creator of the block, with category STABLE
- block: branch.name == "master" and branch.user == block.user
  version: tag==STABLE
  priority: 1

# Examples:
# Lets say that you (maya) introduce a dependency to some cell in willy/block(willy/master)
# and you want to become a Beta tester of such block, you should write a new rule:
#- block: block == "willy/block" and branch == "willy/master"
#  version: tag>=BETA
#  priority: 1
# If you (maya) make a contribution to willy/block and publish it as a branch, you might
# want to depend on it, for any tag, and prioritizing your branch:
#- block: block == "willy/block" and branch == "maya/mybranch"
#  version: tag>=DEV
#  priority: 0  # This will give higher priority in the find process wrt to
#               # willy/block(willy/master) STABLE versions

